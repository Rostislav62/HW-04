# /models/models.py

from sqlalchemy import Column, Integer, String, ForeignKey, DateTime, Text
from sqlalchemy.orm import relationship
from datetime import datetime
import uuid
from sqlalchemy.ext.declarative import declarative_base


Base = declarative_base()

# üìå –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class User(Base):
    __tablename__ = "users"

    id = Column(Integer, primary_key=True, index=True)  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username = Column(String, unique=True, nullable=False)  # –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    email = Column(String, unique=True, nullable=False)  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π email
    password_hash = Column(String, nullable=False)  # –ó–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
    refresh_token = Column(String, nullable=True)  # üîπ –î–æ–±–∞–≤–∏–ª–∏ –ø–æ–ª–µ `refresh_token`
    created_at = Column(DateTime, default=datetime.utcnow)  # –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏

    # üìå –°–≤—è–∑—å: –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å -> –º–Ω–æ–≥–æ —Å–Ω–∏–ø–ø–µ—Ç–æ–≤
    snippets = relationship("Snippet", back_populates="owner")


# üìå –ú–æ–¥–µ–ª—å –∫–æ–¥-—Å–Ω–∏–ø–ø–µ—Ç–∞
class Snippet(Base):
    __tablename__ = "snippets"

    uuid = Column(String, primary_key=True, default=lambda: str(uuid.uuid4()), unique=True, index=True)  # –¢–µ–ø–µ—Ä—å UUID ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á
    title = Column(String, nullable=False)
    description = Column(Text, nullable=True)
    code = Column(Text, nullable=False)
    language = Column(String, nullable=False, index=True)
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    owner_id = Column(Integer, ForeignKey("users.id"), nullable=False, index=True)

    owner = relationship("User", back_populates="snippets")



